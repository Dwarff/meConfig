let mapleader=" "
syntax on
set number
set norelativenumber
set cursorline
set wrap
set wildmenu
"  hlight search and close
set hlsearch
exec "nohlsearch"
set incsearch
set ignorecase
set smartcase

" set transparent with the help of snazzy
let g:SnazzyTransparent = 1


set nocompatible
filetype on
filetype indent on
filetype plugin on
filetype plugin indent on
set mouse=a
set encoding=utf-8
let &t_ut=''
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set list
set listchars=tab:▸\ ,trail:▫
set scrolloff=5
set tw=0
set indentexpr=
set backspace=indent,eol,start
set foldmethod=indent   "flod the code
set foldlevel=99
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"
set laststatus=2
set autochdir
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" search close when open a now file
noremap = nzz
noremap - Nzz
noremap <LEADER><CR> :nohlsearch<CR>

" change the way into my mode
noremap n h
noremap u k
noremap e j
noremap i l
noremap U 5k
noremap E 5j
noremap N 7h
noremap I 7l

" head:0 tail:$
noremap <C-n> 0
noremap <C-i> $
noremap k i
noremap K I
noremap l u

" close save and fresh
map s <nop>
map S :w<CR>
map Q :q<CR>
map R :source ~/.vim/vimrc<CR>
map ; :

" split the screen
map si :set splitright<CR>:vsplit<CR>
map sn :set nosplitright<CR>:vsplit<CR>
map su :set nosplitbelow<CR>:split<CR>
map se :set splitbelow<CR>:split<CR>

" change the guangbiao when opening many screens
map <LEADER>i <C-w>l
map <LEADER>u <C-w>k
map <LEADER>n <C-w>h
map <LEADER>e <C-w>j

" change the sizeof screen 
map <up> :res +5<CR>
map <down> :res -5<CR>
map <left> :vertical resize-5<CR>
map <right> :vertical resize+5<CR>

" creat new table page in the same level 
" use tn ti to change the way we are in
map tu :tabe<CR>
map tn :-tabnext<CR>
map ti :+tabnext<CR>

" change the split of screen when only 2 screens
map sv <C-w>t<C-w>H
map sh <C-w>t<C-w>K

" start the install of plug with the help of vim-plug in github
" start call plug#begin('~/.vim/plugged')
" end call plug#end() 
call plug#begin('~/.vim/plugged')
" change the display in vim
Plug 'vim-airline/vim-airline'

" change the colort of vim
Plug 'connorholyday/vim-snazzy'

" a tree to show file 
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }


"
" Taglist
" use to offer help when coding
Plug 'majutsushi/tagbar', { 'on': 'TagbarOpenAutoClose' }

" makedown preview
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install'  }
" use to show the samw word while coding
" Other visual enhancement
Plug 'nathanaelkane/vim-indent-guides'
Plug 'itchyny/vim-cursorword'

" Error checking
Plug 'w0rp/ale'
call plug#end()

" === snazzy
" ===
color snazzy

" === nerdTree
" ===
map tt :NERDTreeToggle<CR>
let NERDTreeMapOpenExpl = ""
let NERDTreeMapUpdir = ""
let NERDTreeMapUpdirKeepOpen = "l"
let NERDTreeMapOpenSplit = ""
let NERDTreeOpenVSplit = ""
let NERDTreeMapActivateNode = "i"
let NERDTreeMapOpenInTab = "o"
let NERDTreeMapPreview = ""
let NERDTreeMapCloseDir = "n"
let NERDTreeMapChangeRoot = "y"

" === Taglist
" ===
map <silent> T :TagbarOpenAutoClose<CR>


" === vim-indent-guide
" ===
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_color_change_percent = 1
silent! unmap <LEADER>ig
autocmd WinEnter * silent! unmap <LEADER>ig


" === nakedown_prevoew
" ===
" ===

let g:mkdp_auto_start = 0
let g:mkdp_auto_close = 1
let g:mkdp_refresh_slow = 0
let g:mkdp_command_for_global = 0
let g:mkdp_open_to_the_world = 0
let g:mkdp_open_ip = ''
let g:mkdp_browser = 'chromium'
let g:mkdp_echo_preview_url = 0
let g:mkdp_browserfunc = ''
let g:mkdp_preview_options = {
    \ 'mkit': {},
    \ 'katex': {},
    \ 'uml': {},
    \ 'maid': {},
    \ 'disable_sync_scroll': 0,
    \ 'sync_scroll_type': 'middle',
    \ 'hide_yaml_meta': 1
    \ }
let g:mkdp_markdown_css = ''
let g:mkdp_highlight_css = ''
let g:mkdp_port = ''
let g:mkdp_page_title = '「${name}」'
